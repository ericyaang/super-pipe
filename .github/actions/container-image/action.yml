name: 'Docker image for Prefect Cloud execution layer on Google Cloud'
branding:
  icon: cloud
  color: blue
description: 'Package your dependencies into a Docker image and push it to Google Artifact Registry'
inputs:
  prefect_api_key:
    description: 'Prefect Cloud API key'
    required: true
  prefect_api_url:
    description: 'Prefect Cloud API URL'
    required: true
  gcp_credentials_json:
    description: 'Content of the Service Account JSON key file'
    required: true
  region:
    description: 'GCP region'
    required: false
    default: 'us-east1'
  artifact_repository:
    description: 'Artifact Registry Repository Name'
    required: false
    default: prefect
  image_name:
    description: 'Artifact Registry Image Name'
    required: false
    default: deployments
  dockerfile_path:
    description: 'Path and filename of the Dockerfile'
    required: false
    default: Dockerfile
  gcs_s3_endpoint:
    description: 'GCS S3 Endpoint'
    required: true
  gcs_access_key:
    description: 'GCS Access Key'
    required: true
  gcs_secret:
    description: 'GCS Secret'
    required: true
  gcs_bucket_name:
    description: 'GCS Bucket Name'
    required: true
  gcs_bucket_path_bronze:
    description: 'GCS Bucket Path Bronze'
    required: true
  gcs_bucket_path_silver:
    description: 'GCS Bucket Path Silver'
    required: true
  gcs_bucket_path_gold:
    description: 'GCS Bucket Path Gold'
    required: true
  bq_dataset_name:
    description: 'BQ Dataset Name'
    required: true
runs:
  using: "composite"
  steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: "${{ inputs.gcp_credentials_json }}"

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - id: repository
      run: gcloud artifacts repositories create ${{ inputs.artifact_repository }} --repository-format=docker --location=${{ inputs.region }}
      continue-on-error: true
      shell: bash

    - id: set-image
      run: |
        echo "RAW_IMAGE=${{ inputs.region }}-docker.pkg.dev/$GCP_PROJECT/${{ inputs.artifact_repository }}/${{ inputs.image_name }}" >> $GITHUB_ENV
        echo "IMAGE_URI=${{ inputs.region }}-docker.pkg.dev/$GCP_PROJECT/${{ inputs.artifact_repository }}/${{ inputs.image_name }}:$GITHUB_SHA" >> $GITHUB_ENV
        echo "uri=$(echo $IMAGE_URI)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Login to GAR
      uses: docker/login-action@v2
      with:
        registry: '${{ inputs.region }}-docker.pkg.dev'
        username: _json_key
        password: ${{ inputs.gcp_credentials_json }}

    - id: build-image
      run: |
        docker build -q \
        --build-arg PREFECT_API_KEY=${{ inputs.prefect_api_key }} \
        --build-arg PREFECT_API_URL=${{ inputs.prefect_api_url }} \
        --build-arg GCS_S3_ENDPOINT=${{ inputs.gcs_s3_endpoint }} \
        --build-arg GCS_ACCESS_KEY=${{ inputs.gcs_access_key }} \
        --build-arg GCS_SECRET=${{ inputs.gcs_secret }} \
        --build-arg GCS_BUCKET_NAME=${{ inputs.gcs_bucket_name }} \
        --build-arg GCS_BUCKET_PATH_BRONZE=${{ inputs.gcs_bucket_path_bronze }} \
        --build-arg GCS_BUCKET_PATH_SILVER=${{ inputs.gcs_bucket_path_silver }} \
        --build-arg GCS_BUCKET_PATH_GOLD=${{ inputs.gcs_bucket_path_gold }} \
        --build-arg BQ_DATASET_NAME=${{ inputs.bq_dataset_name }} \
        -t "${{ env.RAW_IMAGE }}" -f ${{ inputs.dockerfile_path }} .
        docker tag "${{ env.RAW_IMAGE }}" "${{ env.IMAGE_URI }}"
        docker push "${{ env.RAW_IMAGE }}"
        docker push "${{ env.IMAGE_URI }}"
      shell: bash
